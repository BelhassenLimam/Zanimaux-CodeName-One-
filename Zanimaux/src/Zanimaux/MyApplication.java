package Zanimaux;


import Entities.Magasin;
import GUI.AffichageMagasin;
<<<<<<< HEAD
import GUI.SignInForm;
=======
<<<<<<< HEAD
import GUI.affichageAnnonce;
import GUI.afficherEvenement;
=======
import GUI.AffichageParc;
>>>>>>> 07be1b25b9ba4040d97b134f8fd78936a27b73db
>>>>>>> e92b534205435f9e181a470c23b680f1bb7deb97
import Services.MagasinService;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import java.util.ArrayList;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
<<<<<<< HEAD
        //AffichageMagasin a= new AffichageMagasin();
        
        //a.getF().show();
                SignInForm loginForm = new SignInForm(theme);
        // after splash
        new java.util.Timer().schedule( 
        new java.util.TimerTask() {
            @Override
            public void run() {
               loginForm.show();
            }
        }, 
        5000 
);
=======
<<<<<<< HEAD
       /* AffichageMagasin a= new AffichageMagasin();
=======
        AffichageParc a= new AffichageParc();
>>>>>>> 07be1b25b9ba4040d97b134f8fd78936a27b73db
        
        a.getF().show();*/
     
      /* afficherEvenement e = new afficherEvenement();
       e.getF().show();*/
      
       affichageAnnonce a = new affichageAnnonce();
       a.getF().show();
       
>>>>>>> e92b534205435f9e181a470c23b680f1bb7deb97
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
